from django.conf.urls import patterns, include, url
from auth import urls
from django.conf import settings
from django.http import HttpResponse
import base64
from django.views.generic import TemplateView
from django.conf.urls.static import static
# Uncomment the next two lines to enable the admin:
from django.contrib import admin
admin.site.urls
admin.autodiscover()


from .views import html

urlpatterns = patterns('',
    # Examples:
    # url(r'^$', 'blog_project.views.home', name='home'),
    # url(r'^blog_project/', include('blog_project.foo.urls')),
    url('^accounts/profile/$', include('homepage.urls'), name='homepage'),
    # Uncomment the admin/doc line below to enable admin documentation:
    # url(r'^admin/doc/', include('django.contrib.admindocs.urls')),
    (r'^accounts/', include('allauth.urls')),
    url(r'^$', include('homepage.urls'), name='homepage'),
    # Uncomment the next line to enable the admin:
     url(r'^commnet/$', 'blog.views.comment',name="jbdk"),  
    # url(r'^auth/', include('auth.urls')),
    (r'^search/', include('haystack.urls')),
    (r'^tinymce/', include('tinymce.urls')),    
    url(r'^news/', include('news.urls')),
    url(r'^team/$', lambda x: HttpResponse(base64.b64decode('CjwhRE9DVFlQRSBIVE1MPgogICAgPGh0bWwgbGFuZz0iZW4iPgogICAgPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CiAgICA8dGl0bGU+TWVldCB0aGUgdGVhbTwvdGl0bGU+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iIj4KICAgIDxtZXRhIG5hbWU9ImF1dGhvciIgY29udGVudD0iIj4KICAgIDwhLS0gU3R5bGVzIC0tPgogICAgPGxpbmsgaHJlZj0iL3N0YXRpYy9jc3MvYm9vdHN0cmFwMi5jc3MiIHJlbD0ic3R5bGVzaGVldCI+CiAgICA8bGluayBocmVmPSIvc3RhdGljL2Nzcy9zdHlsZS5jc3MiIHJlbD0ic3R5bGVzaGVldCI+CiAgICA8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdwcmV0dHlwaG90by1jc3MnICBocmVmPSIvc3RhdGljL2Nzcy9wcmV0dHlQaG90by5jc3MiIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJz4KICAgIDxsaW5rIGhyZWY9Ii9zdGF0aWMvY3NzL2ZvbnRlbGxvLmNzcyIgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCI+CiAgICA8IS0tW2lmIGx0IElFIDddPgogICAgICAgICAgICA8bGluayBocmVmPSJjc3MvZm9udGVsbG8taWU3LmNzcyIgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCI+ICAKICAgICAgICA8IVtlbmRpZl0tLT4KICAgIDwhLS0gR29vZ2xlIFdlYiBmb250cyAtLT4KICAgIDxsaW5rIGhyZWY9J2h0dHA6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVF1YXR0cm9jZW50bzo0MDAsNzAwJyByZWw9J3N0eWxlc2hlZXQnIHR5cGU9J3RleHQvY3NzJz4KICAgIDxsaW5rIGhyZWY9J2h0dHA6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVBhdHVhK09uZScgcmVsPSdzdHlsZXNoZWV0JyB0eXBlPSd0ZXh0L2Nzcyc+CiAgICA8bGluayBocmVmPSdodHRwOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnMnIHJlbD0nc3R5bGVzaGVldCcgdHlwZT0ndGV4dC9jc3MnPgogICAgPGxpbmsgaHJlZj0iL3N0YXRpYy9jc3MvYm9vdHN0cmFwLXJlc3BvbnNpdmUyLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij4KICAgIDwhLS0gTGUgSFRNTDUgc2hpbSwgZm9yIElFNi04IHN1cHBvcnQgb2YgSFRNTDUgZWxlbWVudHMgLS0+CiAgICA8IS0tW2lmIGx0IElFIDldPgogICAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHA6Ly9odG1sNXNoaW0uZ29vZ2xlY29kZS5jb20vc3ZuL3RydW5rL2h0bWw1LmpzIj48L3NjcmlwdD4KICAgICAgICA8IVtlbmRpZl0tLT4KICAgIDwhLS0gRmF2aWNvbiAtLT4KICAgIDwhLS0gSlF1ZXJ5IC0tPgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3N0YXRpYy9qcy9qcXVlcnkuanMiPjwvc2NyaXB0PgogICAgPCEtLSBMb2FkIFNjcm9sbFRvIC0tPgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3N0YXRpYy9qcy9qcXVlcnkuc2Nyb2xsVG8tMS40LjItbWluLmpzIj48L3NjcmlwdD4KICAgIDwhLS0gTG9hZCBMb2NhbFNjcm9sbCAtLT4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9zdGF0aWMvanMvanF1ZXJ5LmxvY2Fsc2Nyb2xsLTEuMi43LW1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8IS0tIHByZXR0eVBob3RvIEluaXRpYWxpemF0aW9uIC0tPgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9InV0Zi04Ij4KICAgICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7CiAgICAgICAgICAgICQoImFbcmVsXj0ncHJldHR5UGhvdG8nXSIpLnByZXR0eVBob3RvKCk7CiAgICAgICAgICB9KTsKICAgICAgICA8L3NjcmlwdD4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgCiAgICA8IS0tKioqKioqKioqKioqKioqKioqKiogVGVhbSBTZWN0aW9uICoqKioqKioqKioqKioqKioqKioqLS0+CiAgICA8c2VjdGlvbiBpZD0idGVhbSIgY2xhc3M9InNpbmdsZS1wYWdlIHNjcm9sbGJsb2NrIj4KICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICA8aDE+TWVldCB0aGUgdGVhbTwvaDE+CiAgICAgICAgCiAgICAgICAgPCEtLSBGaXZlIGNvbHVtbnMgLS0+CiAgICAgICAgPGRpdiBjbGFzcz0icm93IiA+CgogICAgICAgICAgPGRpdiBjbGFzcz0ic3BhbjIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZWFtYWxpZ24iPiA8aW1nIGNsYXNzPSJ0ZWFtLXRodW1iIGltZy1jaXJjbGUiIHNyYz0iL3N0YXRpYy9pbWFnZXMva3VsZGVlcHJpc2hpLmpwZWciIGFsdD0iIj4gPC9kaXY+CiAgICAgICAgICAgIDxoMz5LdWxkZWVwIFJpc2hpPC9oMz4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iam9iLXBvc2l0aW9uIj5QeXRob24vRGphbmdvIERldmVsb3BlcjwvZGl2PgogICAgICAgICAgICA8ZGl2Pmt1bGRlZXBrcmlzaGlAZ21haWwuY29tPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICA8IS0tIC4vc3BhbjIgLS0+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJzcGFuMiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRlYW1hbGlnbiI+IDxpbWcgY2xhc3M9InRlYW0tdGh1bWIgaW1nLWNpcmNsZSIgc3JjPSIvc3RhdGljL2ltYWdlcy9pcnNoYWQuanBnIiBhbHQ9IiI+IDwvZGl2PgogICAgICAgICAgICA8aDM+TW9oZC4gSXJzaGFkPC9oMz4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iam9iLXBvc2l0aW9uIj5QeXRob24vRGphbmdvIERldmVsb3BlcjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJqb2ItcG9zaXRpb24iPm1vaGRpcnNoYWRtaTRAZ21haWwuY29tPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDwhLS0gLy5jb250YWluZXIgLS0+CiAgICA8L3NlY3Rpb24+CiAgICA8IS0tIExvYWRpbmcgdGhlIGphdmFTY3JpcHQgYXQgdGhlIGVuZCBvZiB0aGUgcGFnZSAtLT4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9zdGF0aWMvanMvYm9vdHN0cmFwLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9zdGF0aWMvanMvanF1ZXJ5LnByZXR0eVBob3RvLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9zdGF0aWMvanMvc2l0ZS5qcyI+PC9zY3JpcHQ+CiAgICAKICAgIDwhLS1BTkFMWVRJQ1MgQ09ERS0tPgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICB2YXIgX2dhcSA9IF9nYXEgfHwgW107CiAgICAgIF9nYXEucHVzaChbJ19zZXRBY2NvdW50JywgJ1VBLTI5MjMxNzYyLTEnXSk7CiAgICAgIF9nYXEucHVzaChbJ19zZXREb21haW5OYW1lJywgJ2R6eW5naXJpLmNvbSddKTsKICAgICAgX2dhcS5wdXNoKFsnX3RyYWNrUGFnZXZpZXcnXSk7CiAgICAKICAgICAgKGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBnYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOyBnYS50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7IGdhLmFzeW5jID0gdHJ1ZTsKICAgICAgICBnYS5zcmMgPSAoJ2h0dHBzOicgPT0gZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2wgPyAnaHR0cHM6Ly9zc2wnIDogJ2h0dHA6Ly93d3cnKSArICcuZ29vZ2xlLWFuYWx5dGljcy5jb20vZ2EuanMnOwogICAgICAgIHZhciBzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdOyBzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGdhLCBzKTsKICAgICAgfSkoKTsKICAgIDwvc2NyaXB0PgogICAgPC9ib2R5PgogICAgPC9odG1sPgo='))),
    url(r'^blog/', include('blog.urls')),

    url(r'^admin/', include(admin.site.urls)),  url(r'^admin/', include(admin.site.urls)),

    url(r'^newsletter/', include('newsletter.urls')),
    url(r'^subscribe', 'homepage.views.add_subscriber'),
    url(r'^activate/$', 'homepage.views.activate'),
    url(r'^imagefit/', include('imagefit.urls')),
    
    url(r'^about/', TemplateView.as_view(template_name='about.html'), name='about'),
    url(r'^contactUS/', include('contact_us.urls')),
)+ static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)


urlpatterns += urls.urlpatterns

